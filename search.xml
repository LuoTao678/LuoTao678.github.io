<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>SqlServer入门</title>
    <url>/2023/03/20/SqlServer%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h4 id="列的数据类型"><a href="#列的数据类型" class="headerlink" title="列的数据类型"></a>列的数据类型</h4><p>drop database Demo<br>Unicode：<br>    两个字节存储一个字符<br>nvarchar<br>    Unicode型可变字符<br>Char<br>    固定字符</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database myDemo</span><br><span class="line">use myDemo</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student</span><br><span class="line">(</span><br><span class="line">	StudentNo nvarchar(<span class="number">50</span>),</span><br><span class="line">	LoginPwd nvarchar(<span class="number">20</span>),</span><br><span class="line">	StudentName nvarchar(<span class="number">50</span>),</span><br><span class="line">	Sex <span class="type">char</span>(<span class="number">2</span>),</span><br><span class="line">	GradeId <span class="type">int</span>,</span><br><span class="line">	Phone nvarchar(<span class="number">255</span>),</span><br><span class="line">	Address nvarchar(<span class="number">255</span>),</span><br><span class="line">	BornDate Datetime,</span><br><span class="line">	Email nvarchar(<span class="number">50</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h4 id="数据完整性"><a href="#数据完整性" class="headerlink" title="数据完整性"></a>数据完整性</h4><p>​    是否允许null值<br>​    设置主键<br>​    设置默认值<br>​    设置标识列:标识种子、标识增量 通常将标识列设为主键<br>​    </p>
<h4 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h4><ul>
<li>唯一约束<pre><code>将Email设置唯一约束。索引——&gt;添加——&gt;选择列/是唯一的
</code></pre>
</li>
<li>检查约束<pre><code>将Sex设置检查约束。CHECK约束——&gt;表达式——&gt;Sex = &#39;男&#39; or Sex = &#39;女&#39;
</code></pre>
</li>
<li>设置主外键关系<br>外键表——&gt;关系——&gt;表和列规范——&gt;主键Grande表中的Gid,外键Student表中的GradeId</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database education</span><br><span class="line">use education</span><br><span class="line"><span class="comment">--课程信息表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Course_infor</span><br><span class="line">(</span><br><span class="line">	CourseId <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">	Coursename <span class="type">char</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">--选课表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Customer_Infor</span><br><span class="line">(</span><br><span class="line">	Customer_Id <span class="type">int</span> <span class="keyword">primary</span> key, <span class="comment">--主键</span></span><br><span class="line">	Customer_Name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	Customer_Sex <span class="type">varchar</span>(<span class="number">2</span>) <span class="keyword">check</span> (Customer_Sex<span class="operator">=</span><span class="string">&#x27;男&#x27;</span> <span class="keyword">or</span> Customer_Sex<span class="operator">=</span><span class="string">&#x27;女&#x27;</span>), <span class="comment">--检查约束</span></span><br><span class="line">	Customer_Age <span class="type">int</span> <span class="keyword">check</span>(Customer_Age <span class="operator">&gt;=</span><span class="number">0</span>),</span><br><span class="line">	Customer_Phone <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">unique</span>, <span class="comment">--唯一约束</span></span><br><span class="line">	Customer_Address <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> <span class="string">&#x27;重庆&#x27;</span>, <span class="comment">--默认值</span></span><br><span class="line">	CourseId <span class="type">int</span> <span class="keyword">foreign</span> key <span class="keyword">references</span> Course_infor(CourseId) <span class="comment">--主外键关联</span></span><br><span class="line">)</span><br><span class="line">将主键Customer_Id设置标识列增量<span class="number">1</span></span><br></pre></td></tr></table></figure>

<h4 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Course_infor(Coursename) <span class="keyword">values</span>(<span class="string">&#x27;Java&#x27;</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Course_infor <span class="keyword">values</span>(<span class="string">&#x27;数据库&#x27;</span>),(<span class="string">&#x27;mvc&#x27;</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Customer_Infor(Customer_Name,Customer_Sex,Customer_Age,Customer_Phone,CourseId) <span class="keyword">values</span>(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">18</span>,<span class="number">110</span>,<span class="number">1</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Customer_Infor <span class="keyword">values</span>(<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">19</span>,<span class="number">111</span>,<span class="keyword">default</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p>插入多行数据</p>
<ul>
<li>通过insert select 语句将源表中的数据添加到已存在的表中</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">inset <span class="keyword">into</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>(列名)</span><br><span class="line"><span class="keyword">select</span><span class="operator">&lt;</span>列名<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">from</span><span class="operator">&lt;</span>源表名<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<p>创建test表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test(Coursename) </span><br><span class="line"><span class="keyword">select</span> Coursename </span><br><span class="line"><span class="keyword">from</span> Course_infor</span><br></pre></td></tr></table></figure>

<ul>
<li><p>通过select into语句将现有表数据添加到新表中,新表test1将会自动生成</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span>(列名)</span><br><span class="line"><span class="keyword">into</span><span class="operator">&lt;</span>表名<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">from</span><span class="operator">&lt;</span>源表名<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> Customer_Name,Customer_Sex </span><br><span class="line"><span class="keyword">into</span> test1 </span><br><span class="line"><span class="keyword">from</span> Customer_Infor</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="修改和删除"><a href="#修改和删除" class="headerlink" title="修改和删除"></a>修改和删除</h4><ul>
<li><p>update set更新行</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 列名 <span class="operator">=</span> 更新值</span><br><span class="line"><span class="keyword">where</span> 更新条件</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> Customer_Infor <span class="keyword">set</span> Customer_Name <span class="operator">=</span> <span class="string">&#x27;黄蓉&#x27;</span> <span class="keyword">where</span> Customer_Id <span class="operator">=</span><span class="number">1</span> </span><br></pre></td></tr></table></figure></li>
<li><p>delete  from 删除行</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名</span><br><span class="line"><span class="keyword">where</span> 删除条件</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> test <span class="keyword">where</span> Coursename<span class="operator">=</span><span class="string">&#x27;java&#x27;</span> <span class="keyword">or</span> Coursename <span class="operator">=</span> <span class="string">&#x27;数据库&#x27;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="数据查询"><a href="#数据查询" class="headerlink" title="数据查询"></a>数据查询</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">&lt;</span>列名<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">from</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">Where</span> <span class="operator">&lt;</span>查询条件<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="operator">&lt;</span>排序列名<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> top <span class="number">2</span> <span class="operator">*</span> <span class="keyword">from</span> Customer_Infor <span class="comment">--前两条记录</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Customer_Infor <span class="keyword">where</span> Customer_Age <span class="keyword">between</span> <span class="number">18</span> <span class="keyword">and</span> <span class="number">20</span> </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Customer_Infor <span class="keyword">where</span> Customer_Phone <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> courseId <span class="keyword">from</span> Customer_Infor</span><br><span class="line"><span class="keyword">select</span> customer_name <span class="keyword">as</span> 客户名,customer_age <span class="keyword">as</span> 年龄,customer_sex <span class="keyword">as</span> 性别 <span class="keyword">from</span> Customer_Infor</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">SUM</span>(customer_age) <span class="keyword">as</span> 总年龄 <span class="keyword">from</span> Customer_Infor</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">MAX</span>(customer_age) <span class="keyword">as</span> 最大年龄 <span class="keyword">from</span> Customer_Infor</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> 记录数 <span class="keyword">from</span> Customer_Infor </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Customer_Infor <span class="keyword">where</span> Customer_Name <span class="keyword">like</span> <span class="string">&#x27;%罗%&#x27;</span> <span class="comment">--包含罗的用户</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Customer_Infor <span class="keyword">where</span> Customer_Name <span class="keyword">like</span> <span class="string">&#x27;罗_&#x27;</span> <span class="comment">--姓罗的两个字的用户</span></span><br><span class="line"><span class="comment">--根据customer_id排序生成序号列</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">ROW_NUMBER</span>() <span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> customer_id) <span class="keyword">as</span> 序号,customer_id,customer_name <span class="keyword">from</span> Customer_Infor</span><br></pre></td></tr></table></figure>

<h4 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h4><p>一个班分组男女</p>
<p>select后的字段必须是聚合函数或是group by 后面的字段</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--每个课程有多少人选择</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> 选择人数,CourseId <span class="keyword">as</span> 课程编号 <span class="keyword">from</span> Customer_Infor <span class="keyword">group</span> <span class="keyword">by</span> CourseId</span><br><span class="line"><span class="comment">--查询男女的平均年龄</span></span><br><span class="line"><span class="keyword">select</span> customer_Sex <span class="keyword">as</span> 性别,<span class="built_in">AVG</span>(customer_Age) <span class="keyword">as</span> 平均年龄 <span class="keyword">from</span> Customer_Infor <span class="keyword">group</span> <span class="keyword">by</span> Customer_Sex</span><br></pre></td></tr></table></figure>

<p>分组的条件查询</p>
<ul>
<li>分组前条件 customer_Age &gt; 18</li>
<li>分组后条件 COUNT(*) = 3 人数等于3的组</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--按男女的平均年龄大于18分组，分组后人数等于3的组</span></span><br><span class="line"><span class="keyword">select</span> customer_Sex <span class="keyword">as</span> 性别,<span class="built_in">AVG</span>(customer_Age) <span class="keyword">as</span> 平均年龄 <span class="keyword">from</span> Customer_Infor <span class="keyword">where</span> customer_Age <span class="operator">&gt;</span> <span class="number">18</span> <span class="keyword">group</span> <span class="keyword">by</span> Customer_Sex <span class="keyword">having</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">=</span> <span class="number">3</span></span><br></pre></td></tr></table></figure>

<h4 id="内连接和外连接"><a href="#内连接和外连接" class="headerlink" title="内连接和外连接"></a>内连接和外连接</h4><h5 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--查询用户编号，姓名，性别和选择的课程名称</span></span><br><span class="line"><span class="keyword">select</span> Customer_Id,Customer_Name,Customer_Sex,Coursename,Course_infor.CourseId </span><br><span class="line"><span class="keyword">from</span> Customer_Infor <span class="keyword">inner</span> <span class="keyword">join</span> Course_infor </span><br><span class="line"><span class="keyword">on</span> Customer_Infor.CourseId <span class="operator">=</span> Course_infor.CourseId</span><br></pre></td></tr></table></figure>

<p>第二种写法</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> Customer_Id,Customer_Name,Customer_Sex,Coursename,Course_infor.CourseId <span class="keyword">from</span> Customer_Infor,Course_infor </span><br><span class="line"><span class="keyword">where</span> Customer_Infor.CourseId <span class="operator">=</span> Course_infor.CourseId</span><br></pre></td></tr></table></figure>

<h5 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--课程表中有哪些学生选，没人选的课程置空</span></span><br><span class="line"><span class="comment">--左外连接，左表所有记录出来，右表和左表匹配的记录出来，没匹配的记录置空</span></span><br><span class="line"><span class="keyword">select</span> Coursename,Customer_Name <span class="keyword">from</span> Course_infor <span class="keyword">left</span> <span class="keyword">join</span> Customer_Infor <span class="keyword">on</span> Course_infor.CourseId <span class="operator">=</span> Course_infor.CourseId </span><br><span class="line"><span class="keyword">select</span> Coursename,Customer_Name <span class="keyword">from</span> Customer_Infor <span class="keyword">right</span> <span class="keyword">join</span> Course_infor <span class="keyword">on</span> Course_infor.CourseId <span class="operator">=</span> Course_infor.CourseId </span><br></pre></td></tr></table></figure>

<h4 id="综合练习"><a href="#综合练习" class="headerlink" title="综合练习"></a>综合练习</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database DB_Book</span><br><span class="line">use DB_Book</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> booktype</span><br><span class="line">(</span><br><span class="line">	TypeID <span class="type">int</span> <span class="keyword">primary</span> key <span class="keyword">identity</span>,<span class="comment">--主键自增</span></span><br><span class="line">	TypeName <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> book</span><br><span class="line">(</span><br><span class="line">	BOOKID <span class="type">int</span> <span class="keyword">primary</span> key <span class="keyword">identity</span>,</span><br><span class="line">	BOOKName <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	BOOKAuthor <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	BOOKDate <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">	TypeID <span class="type">int</span> <span class="keyword">foreign</span> key <span class="keyword">references</span> booktype(TypeID)</span><br><span class="line">)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> booktype <span class="keyword">values</span>(<span class="string">&#x27;古典&#x27;</span>),(<span class="string">&#x27;现代&#x27;</span>),(<span class="string">&#x27;科幻&#x27;</span>),(<span class="string">&#x27;言情&#x27;</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> book <span class="keyword">values</span>(<span class="string">&#x27;三国演义&#x27;</span>,<span class="string">&#x27;王森&#x27;</span>,<span class="string">&#x27;2016-9-8&#x27;</span>,<span class="number">1</span>),(<span class="string">&#x27;校花的世界&#x27;</span>,<span class="string">&#x27;赵兵&#x27;</span>,<span class="string">&#x27;2016-8-6&#x27;</span>,<span class="number">4</span>),(<span class="string">&#x27;钢铁侠&#x27;</span>,<span class="string">&#x27;崔辉&#x27;</span>,<span class="string">&#x27;2016-8-6&#x27;</span>,<span class="number">3</span>),(<span class="string">&#x27;c#&#x27;</span>,<span class="string">&#x27;冯强&#x27;</span>,<span class="string">&#x27;2016-8-6&#x27;</span>,<span class="number">2</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--所有图书编号，名称，作者及类别名称</span></span><br><span class="line"><span class="keyword">select</span> bookid,bookname,bookauthor,typename <span class="keyword">from</span> booktype <span class="keyword">inner</span> <span class="keyword">join</span> book <span class="keyword">on</span> book.typeID <span class="operator">=</span> booktype.typeID</span><br><span class="line"><span class="keyword">select</span> bookid,bookname,bookauthor,typename <span class="keyword">from</span> booktype,book <span class="keyword">where</span> book.typeID <span class="operator">=</span> booktype.typeID</span><br><span class="line"><span class="comment">--查询古典及教育类图书的编号，名称，作者，出版日期及类别名称</span></span><br><span class="line"><span class="keyword">select</span> bookid,bookname,bookauthor,bookdate,typename <span class="keyword">from</span> booktype,book <span class="keyword">where</span> book.TypeID <span class="operator">=</span> booktype.TypeID <span class="keyword">and</span> TypeName <span class="operator">=</span> <span class="string">&#x27;古典&#x27;</span> <span class="keyword">or</span> TypeName <span class="operator">=</span> <span class="string">&#x27;现代&#x27;</span></span><br><span class="line"><span class="comment">--查询图书信息按出版日期降序</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> book <span class="keyword">order</span> <span class="keyword">by</span> BOOKDate <span class="keyword">desc</span></span><br><span class="line"><span class="comment">--查询作者姓王的所有图书名称，作者及类别名称</span></span><br><span class="line"><span class="keyword">select</span> bookname,bookauthor,typename <span class="keyword">from</span> booktype,book <span class="keyword">where</span> book.TypeID <span class="operator">=</span> booktype.TypeID <span class="keyword">and</span> bookauthor <span class="keyword">like</span> <span class="string">&#x27;王%&#x27;</span></span><br><span class="line"><span class="comment">--查询图书信息表中按编号降序排序前3条数据</span></span><br><span class="line"><span class="keyword">select</span> top <span class="number">3</span> <span class="operator">*</span> <span class="keyword">from</span> book <span class="keyword">order</span> <span class="keyword">by</span> BOOKID <span class="keyword">desc</span></span><br><span class="line"><span class="comment">--分别查询每类图书的数量</span></span><br><span class="line"><span class="keyword">select</span> booktype.TypeID ,typename <span class="keyword">as</span> 类型,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> 数量 <span class="keyword">from</span> booktype,book <span class="keyword">where</span> book.TypeID <span class="operator">=</span> booktype.TypeID <span class="keyword">group</span> <span class="keyword">by</span> booktype.TypeID,typename</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--查看同名用户信息</span></span><br><span class="line"><span class="keyword">select</span> a.CourseId,a.Customer_Age,a.Customer_Name <span class="keyword">from</span> Customer_Infor a,Customer_Infor b <span class="keyword">where</span> a.Customer_Name <span class="operator">=</span> b.Customer_Name <span class="keyword">and</span> a.Customer_Id <span class="operator">&lt;&gt;</span> b.Customer_Id</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> employee</span><br><span class="line">(</span><br><span class="line">	eid <span class="type">int</span> <span class="keyword">primary</span> key , <span class="comment">--员工id</span></span><br><span class="line">	ename <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>, <span class="comment">--员工姓名</span></span><br><span class="line">	mid <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="comment">--员工领导id</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> employee <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;郭经理&#x27;</span>,<span class="number">0</span>),(<span class="number">2</span>,<span class="string">&#x27;小李&#x27;</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--员工及领导姓名</span></span><br><span class="line"><span class="keyword">select</span> a.ename <span class="keyword">as</span> 员工姓名, b.ename <span class="keyword">as</span> 领导姓名 <span class="keyword">from</span> employee a,employee b <span class="keyword">where</span> a.mid <span class="operator">=</span> b.eid</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>database</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/03/19/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>temp</title>
    <url>/2023/03/27/temp/</url>
    <content><![CDATA[<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 跨数据库复制表</span></span><br><span class="line"><span class="comment">-- 当表目标表存在时：</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 目的数据库..表 <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 源数据库..表</span><br><span class="line"><span class="comment">-- 当目标表不存在时：</span></span><br><span class="line"><span class="comment">-- select * into 目的数据库..表 from 源数据库..表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">into</span> Chips.dbo.getnumberid <span class="keyword">from</span> [<span class="keyword">user</span>].dbo.getnumberid</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>vue3教程</title>
    <url>/2023/04/12/vue3%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="Vue3"><a href="#Vue3" class="headerlink" title="Vue3"></a>Vue3</h1><p>官网：<a href="http://v3.cn.vuejs.org/">http://v3.cn.vuejs.org</a></p>
<p>index.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入最新Vue3脚本 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 渲染数据 --&gt;</span></span><br><span class="line">			</span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">const</span> app = &#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="comment">// 初始化数据</span></span></span><br><span class="line"><span class="language-javascript">				<span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">						</span></span><br><span class="line"><span class="language-javascript">					&#125;</span></span><br><span class="line"><span class="language-javascript">				&#125;</span></span><br><span class="line"><span class="language-javascript">			&#125;;</span></span><br><span class="line"><span class="language-javascript">			</span></span><br><span class="line"><span class="language-javascript">			<span class="comment">// 挂载</span></span></span><br><span class="line"><span class="language-javascript">			<span class="title class_">Vue</span>.<span class="title function_">createApp</span>(app).<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>); </span></span><br><span class="line"><span class="language-javascript">		</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Vue3简介"><a href="#Vue3简介" class="headerlink" title="Vue3简介"></a>Vue3简介</h2><p>Vue前端的渐进式JavaScript框架。用来构建前后端动态交互的技术。从底层向上进行兼容。Vue只关注视图的数据展示，类库健全，实现单页面开发。</p>
<ul>
<li>JS、HTML、CSS</li>
<li>Vue框架能虚拟化DOM元素</li>
</ul>
<h2 id="Vue3安装"><a href="#Vue3安装" class="headerlink" title="Vue3安装"></a>Vue3安装</h2><h3 id="1-开发平台"><a href="#1-开发平台" class="headerlink" title="1 开发平台"></a>1 开发平台</h3><ol>
<li><p>HBuidlerX：基于Vue框架的uniapp框架。</p>
</li>
<li><p>VSCode：微软开源。</p>
</li>
</ol>
<h3 id="2-安装Vue3"><a href="#2-安装Vue3" class="headerlink" title="2 安装Vue3"></a>2 安装Vue3</h3><ol>
<li>第一种：CDN引入</li>
<li>第二种：本地引入。</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue3安装<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 1.CDN:通过在线引入vue3脚本 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 2.下载：通过本地引入Vue3脚本 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Vue3的语法"><a href="#Vue3的语法" class="headerlink" title="Vue3的语法"></a>Vue3的语法</h2><h3 id="1-Vue3开发步骤及语法解析"><a href="#1-Vue3开发步骤及语法解析" class="headerlink" title="1 Vue3开发步骤及语法解析"></a>1 Vue3开发步骤及语法解析</h3><p><strong>Vue3入门案例</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- </span><br><span class="line">Vue3开发步骤：</span><br><span class="line">	1. 创建一个Vue的实例对象：</span><br><span class="line">	</span><br><span class="line">	2. Vue作用在页面的指定位置(表示可以渲染页面的哪个位置);</span><br><span class="line">	</span><br><span class="line">	3. 数据的渲染：如何实现数据渲染到页面的指定位置处（Vue语法）</span><br><span class="line"> --&gt;</span><br><span class="line"> &lt;!-- </span><br><span class="line">Vue语法解析：</span><br><span class="line">	1. &#123;&#123;变量名&#125;&#125;: 插值表达式，能够读取在Vue中定义的初始化变量的取值。</span><br><span class="line">	2. mount(&quot;选择器&quot;): 根据选择器来选择一个元素，是Vue的挂载点，可以在该元素中使用Vue（比如访问Vue中的数据）。</span><br><span class="line">	   * id选择器：mount(&quot;#id属性的值&quot;)，首选</span><br><span class="line">	   * 类选择器：mount(&quot;.class属性的值&quot;)</span><br><span class="line">  --&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;入门案例&lt;/title&gt;</span><br><span class="line">		&lt;!-- 引入最新Vue3脚本 --&gt;</span><br><span class="line">		&lt;script src=&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">	&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;div id=&quot;hello-vue&quot;&gt;</span><br><span class="line">			&lt;!-- 3.渲染数据: 通过&#123;&#123;变量名&#125;&#125;访问vue中的数据 --&gt;</span><br><span class="line">			&#123;&#123; message &#125;&#125;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;script&gt;</span><br><span class="line">			// 1.初始化数据： 告知Vue对象渲染的数据是什么</span><br><span class="line">			const helloVueApp = &#123;</span><br><span class="line">				data()&#123;</span><br><span class="line">					// 声明一个data函数：表示Vue初始化数据的声明</span><br><span class="line">					return&#123;</span><br><span class="line">						// 声明数据</span><br><span class="line">						// 将初始化的数据返回给调用者</span><br><span class="line">						// 定义初始化的数据。变量名：变量值</span><br><span class="line">						// username: &quot;luotao&quot;,</span><br><span class="line">						// password: &quot;888&quot;,</span><br><span class="line">						// age: 22,</span><br><span class="line">						message: &quot;hello vue&quot;,</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			// 2.创建一个Vue实例对象,加载初始化数据,并将Vue对象作用到页面的指定位置处（挂载）</span><br><span class="line">			Vue.createApp(helloVueApp).mount(&quot;#hello-vue&quot;); //选择器：选择挂载的位置，选中某一个元素。挂载到页面的指定元素上，就可以在元素内部访问vue中的数据</span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="./vue3%E6%95%99%E7%A8%8B.assets/image-20230413100452819.png" alt="image-20230413100452819"></p>
<h3 id="2-data函数"><a href="#2-data函数" class="headerlink" title="2 data函数"></a>2 data函数</h3><p><strong>02-data函数</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- </span><br><span class="line">	data用来定义vue的初始化数据。底层返回一个$data属性，来存储data函数的内容。访问Vue实例中定义的任意变量，一般简写($data)。</span><br><span class="line"> --&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;data函数&lt;/title&gt;</span><br><span class="line">		&lt;!-- 引入最新Vue3脚本 --&gt;</span><br><span class="line">		&lt;script src=&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">	&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">			&lt;!-- 访问vue中的数据 --&gt;</span><br><span class="line">			&#123;&#123; count &#125;&#125;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		&lt;script&gt;</span><br><span class="line">			const app = Vue.createApp(&#123;</span><br><span class="line">				data()&#123;</span><br><span class="line">					// data函数在vue创建组件的时候被自动调用</span><br><span class="line">					return&#123;</span><br><span class="line">						count: 4 </span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;)</span><br><span class="line">			</span><br><span class="line">			// 返回vue的挂载实例对象</span><br><span class="line">			const vm = app.mount(&quot;#app&quot;) //挂载</span><br><span class="line">			</span><br><span class="line">			// 通过$data访问data()函数中的数据,也可以直接访问</span><br><span class="line">			// document表示页面对象</span><br><span class="line">			// write函数表示向document中追加数据</span><br><span class="line">			document.write(vm.$data.count) //4</span><br><span class="line">			document.write(&quot;&lt;br/&gt;&quot;) // 换行</span><br><span class="line">			document.write((vm.count)) //4</span><br><span class="line">			vm.count = 5</span><br><span class="line">			document.write(&quot;&lt;br/&gt;&quot;) // 换行</span><br><span class="line">			document.write(vm.$data.count) //5</span><br><span class="line">			document.write(&quot;&lt;br/&gt;&quot;) // 换行</span><br><span class="line">			document.write((vm.count)) //5</span><br><span class="line">			</span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="./vue3%E6%95%99%E7%A8%8B.assets/image-20230413100536169.png" alt="image-20230413100536169"></p>
<h3 id="3-自定义函数"><a href="#3-自定义函数" class="headerlink" title="3 自定义函数"></a>3 自定义函数</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- </span><br><span class="line">自定义函数：</span><br><span class="line">	根据业务来编写逻辑，把逻辑封装到自定义的结构中，这个结构就称之为方法或函数。</span><br><span class="line">	methods: 表示声明自定义函数结构，在这个结构中定义多个方法。</span><br><span class="line">	&#123;</span><br><span class="line">	    data()&#123;</span><br><span class="line">	        return&#123;</span><br><span class="line">	            // 返回给调用者初始化数据</span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125;,</span><br><span class="line">	    methods:&#123;</span><br><span class="line">	        // 自定义函数</span><br><span class="line">	        方法1(参数列表)&#123;</span><br><span class="line">	            //方法体</span><br><span class="line">	        &#125;,</span><br><span class="line">	        方法2(参数列表)&#123;</span><br><span class="line">	            //方法体</span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125;</span><br><span class="line">	&#125;;</span><br><span class="line"> --&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;方法&lt;/title&gt;</span><br><span class="line">		&lt;!-- 引入最新Vue3脚本 --&gt;</span><br><span class="line">		&lt;script src=&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">	&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">			</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;script&gt;</span><br><span class="line">			// 创建Vue实例对象并初始化数据</span><br><span class="line">			const app = Vue.createApp(&#123;</span><br><span class="line">				data()&#123;</span><br><span class="line">					return&#123;</span><br><span class="line">						// 返回给调用者初始化数据</span><br><span class="line">						count: 1</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;,</span><br><span class="line">				methods:&#123;</span><br><span class="line">					// 自定义函数</span><br><span class="line">					increment()&#123;</span><br><span class="line">						// this表示vue的当前实例对象,要访问data的局部变量必须通过this</span><br><span class="line">						this.count++;</span><br><span class="line">					&#125;,</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;);</span><br><span class="line">			// 借用Vue的实例对象访问Vue中的结构 </span><br><span class="line">			const vm = app.mount(&quot;#app&quot;);</span><br><span class="line">			// 访问变量</span><br><span class="line">			document.write(vm.count) // 1</span><br><span class="line">			// 访问方法</span><br><span class="line">			vm.increment(); // count++</span><br><span class="line">			document.write(vm.count) // 2</span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Vue3模板语法"><a href="#Vue3模板语法" class="headerlink" title="Vue3模板语法"></a>Vue3模板语法</h2><p>允许开发者使用DOM绑定的形式做Vue数据的展示(渲染)</p>
<h3 id="1-插值、v-html指令"><a href="#1-插值、v-html指令" class="headerlink" title="1 插值、v-html指令"></a>1 插值、v-html指令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- v-html指令</span><br><span class="line">	文本插值与HTML插值</span><br><span class="line"> --&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;html指令&lt;/title&gt;</span><br><span class="line">		&lt;!-- 引入最新Vue3脚本 --&gt;</span><br><span class="line">		&lt;script src=&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">	&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">			&lt;!-- 文本插值：将值作为字符串输出 </span><br><span class="line">				在Vue实例对象中定义属性,然后再挂载在区域内通过&#123;&#123;变量名&#125;&#125;</span><br><span class="line">			--&gt;</span><br><span class="line">			&lt;p&gt;&#123;&#123;rawHtml&#125;&#125;&lt;/p&gt; </span><br><span class="line">			&lt;!-- HTML插值: 使用v-html指令(Vue提供的)</span><br><span class="line">				将指定的html片断插入到被标记的元素内,以子标签的形式出现; v-html的取值是html片断的变量名称。</span><br><span class="line">			 --&gt;</span><br><span class="line">			&lt;p&gt;</span><br><span class="line">				&lt;span v-html=&quot;rawHtml&quot;&gt;&lt;/span&gt;</span><br><span class="line">			&lt;/p&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		&lt;script&gt;</span><br><span class="line">			const app = Vue.createApp(&#123;</span><br><span class="line">				data()&#123;</span><br><span class="line">					return&#123;</span><br><span class="line">						rawHtml: &#x27;&lt;span style=&quot;color:red;&quot;&gt;这是要插入的html片断代码&lt;/span&gt;&#x27;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;);</span><br><span class="line">			app.mount(&quot;#app&quot;)</span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="./vue3%E6%95%99%E7%A8%8B.assets/image-20230412143356159.png" alt="image-20230412143356159"></p>
<h3 id="2-表达式"><a href="#2-表达式" class="headerlink" title="2 表达式"></a>2 表达式</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--表达式: </span><br><span class="line">	在Vue中插值支持四则运算; 将运算的结果插入到指定的位置 </span><br><span class="line">	</span><br><span class="line"> --&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;表达式&lt;/title&gt;</span><br><span class="line">		&lt;!-- 引入最新Vue3脚本 --&gt;</span><br><span class="line">		&lt;script src=&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">	&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;div id= &quot;app&quot;&gt;</span><br><span class="line">			1.四则运算: &#123;&#123;5+5&#125;&#125; &lt;br/&gt;</span><br><span class="line">			2.三目运算符:  &#123;&#123; ok ? &quot;yes&quot; : &quot;no&quot; &#125;&#125; &lt;br/&gt;</span><br><span class="line">			&lt;!-- 将字符串拆分反转然后重新连接 --&gt;</span><br><span class="line">			3.支持函数: &#123;&#123; message.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;)&#125;&#125; &lt;br/&gt;</span><br><span class="line">			4.属性: v-bind 表示将目标属性设置为动态取值,表示将属性的值绑定到指定的一个变量中</span><br><span class="line">			&lt;div v-bind:id=&quot;&#x27;list-&#x27; + id&quot;&gt;&lt;/div&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		&lt;script&gt;</span><br><span class="line">			const app=&#123;</span><br><span class="line">				data()&#123;</span><br><span class="line">					return&#123;</span><br><span class="line">						ok: true,</span><br><span class="line">						message: &quot;罗涛学习Vue3&quot;,</span><br><span class="line">						id: 1</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;;</span><br><span class="line">			Vue.createApp(app).mount(&quot;#app&quot;);</span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="./vue3%E6%95%99%E7%A8%8B.assets/image-20230412155425266.png" alt="image-20230412155425266"></p>
<p><img src="./vue3%E6%95%99%E7%A8%8B.assets/image-20230413100853394.png" alt="image-20230413100853394"></p>
<h3 id="3-Vue3指令"><a href="#3-Vue3指令" class="headerlink" title="3 Vue3指令"></a>3 Vue3指令</h3><h4 id="1-条件指令-v-if、v-else、v-else-if、v-show"><a href="#1-条件指令-v-if、v-else、v-else-if、v-show" class="headerlink" title="1 条件指令 v-if、v-else、v-else-if、v-show"></a>1 条件指令 v-if、v-else、v-else-if、v-show</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--Vue3指令： 控制Vue的语法值的访问，应用到Dom上。</span><br><span class="line">	v-if指令: </span><br><span class="line">		&lt;span v-if=&quot;条件&quot;&gt;内容&lt;/span&gt;</span><br><span class="line">		若条件为真，则渲染到DOM上</span><br><span class="line">		若条件为假，则在DOM是不进行渲染(而非隐藏)</span><br><span class="line"> --&gt;</span><br><span class="line"> </span><br><span class="line"> &lt;!-- v-else指令</span><br><span class="line"> 	和v-if成对出现,当v-if指令的条件不成立,v-else被执行。</span><br><span class="line"> 	&lt;span v-else&gt;内容&lt;/span&gt;</span><br><span class="line">  --&gt;</span><br><span class="line">  </span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;常用指令&lt;/title&gt;</span><br><span class="line">		&lt;!-- 引入最新Vue3脚本 --&gt;</span><br><span class="line">		&lt;script src=&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">	&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">			&lt;!-- seen=true时渲染到Dom上，false则不渲染 --&gt;</span><br><span class="line">			&lt;p v-if=&quot;seen&quot;&gt;可以看见!&lt;/p&gt;</span><br><span class="line">			&lt;p v-else&gt;不可以看见!&lt;/p&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		&lt;script&gt;</span><br><span class="line">			const app = &#123;</span><br><span class="line">				data()&#123;</span><br><span class="line">					return&#123;</span><br><span class="line">						seen: true</span><br><span class="line">						//seen: false</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;;</span><br><span class="line">			Vue.createApp(app).mount(&quot;#app&quot;);</span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="./vue3%E6%95%99%E7%A8%8B.assets/image-20230413100942875.png" alt="image-20230413100942875"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- </span><br><span class="line">	条件指令 v-if 、v-else if、v-else</span><br><span class="line">	如果条件不成立，则对应的标签不会被渲染到DOM上。</span><br><span class="line"> --&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;&lt;/title&gt;</span><br><span class="line">		&lt;!-- 引入最新Vue3脚本 --&gt;</span><br><span class="line">		&lt;script src=&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">	&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">			&lt;!-- 渲染数据 --&gt;</span><br><span class="line">			&lt;p v-if=&quot;type==&#x27;A&#x27;&quot;&gt;A.优秀&lt;/p&gt;</span><br><span class="line">			&lt;p v-else-if= &quot;type==&#x27;B&#x27;&quot;&gt;B.良好&lt;/p&gt;</span><br><span class="line">			&lt;p v-else-if= &quot;type==&#x27;C&#x27;&quot;&gt;C.及格&lt;/p&gt;</span><br><span class="line">			&lt;p v-else &gt;D.不及格&lt;/p&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;script&gt;</span><br><span class="line">			const app = &#123;</span><br><span class="line">			// 初始化数据</span><br><span class="line">				data()&#123;</span><br><span class="line">					return&#123;</span><br><span class="line">						type: &quot;B&quot;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;;</span><br><span class="line">			</span><br><span class="line">			// 挂载</span><br><span class="line">			Vue.createApp(app).mount(&quot;#app&quot;); </span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="./vue3%E6%95%99%E7%A8%8B.assets/image-20230413111338989.png" alt="image-20230413111338989"></p>
<h4 id="2-v-if与v-show的区别"><a href="#2-v-if与v-show的区别" class="headerlink" title="2 v-if与v-show的区别"></a>2 v-if与v-show的区别</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--v-if与v-show的区别 </span><br><span class="line">	v-if:	若条件不成立，则修饰的元素不会被加载到DOM。</span><br><span class="line">	v-show:	若条件不成立，则修饰的元素会加载到DOM，并且将此元素的display设为none，即不可见。</span><br><span class="line"> --&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;v-if与v-show的区别&lt;/title&gt;</span><br><span class="line">		&lt;!-- 引入最新Vue3脚本 --&gt;</span><br><span class="line">		&lt;script src=&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">	&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">			&lt;!-- 渲染数据 --&gt;</span><br><span class="line">			&lt;p v-if=&quot;flag&quot;&gt;v-if指令渲染此元素&lt;/p&gt;</span><br><span class="line">			&lt;p v-show=&quot;flag&quot;&gt;v-show指令渲染此元素&lt;/p&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;script&gt;</span><br><span class="line">			const app = &#123;</span><br><span class="line">			// 初始化数据</span><br><span class="line">				data()&#123;</span><br><span class="line">					return&#123;</span><br><span class="line">						flag: false</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;;</span><br><span class="line">			</span><br><span class="line">			// 挂载</span><br><span class="line">			Vue.createApp(app).mount(&quot;#app&quot;); </span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="./vue3%E6%95%99%E7%A8%8B.assets/image-20230413113601616.png" alt="image-20230413113601616"></p>
<h4 id="3-v-for指令"><a href="#3-v-for指令" class="headerlink" title="3  v-for指令"></a>3  v-for指令</h4><blockquote>
<p>类似Java中的For Each 循环</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- v-for指令</span><br><span class="line">	遍历数组</span><br><span class="line">	&#123;</span><br><span class="line">		&lt;li v-for=&quot;(元素变量,索引) in 被循环的数组&quot;&gt;&lt;/li&gt;</span><br><span class="line">		sites: &#123;...&#125;</span><br><span class="line">	&#125;</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--高级用法：&lt;template&gt;标签</span><br><span class="line">	将页面某一个子标签作为一个整体统一处理。</span><br><span class="line"> --&gt;</span><br><span class="line"> </span><br><span class="line"> &lt;!--遍历对象 </span><br><span class="line">	&#123;</span><br><span class="line">		&lt;li v-for=&quot;(元素变量,key,索引) in 被循环的对象&quot;&gt;&lt;/li&gt;</span><br><span class="line">		obj: &#123; // 对象</span><br><span class="line">		// key:value</span><br><span class="line">			name: &quot;百度&quot;,</span><br><span class="line">			url: &quot;http://www.baidu.com&quot;,</span><br><span class="line">			slogan: &quot;百度一下，你就知道&quot; // 标语 </span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">--&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;v-for索引、遍历对象&lt;/title&gt;</span><br><span class="line">		&lt;!-- 引入最新Vue3脚本 --&gt;</span><br><span class="line">		&lt;script src=&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">	&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">			&lt;!-- 渲染数据 --&gt;</span><br><span class="line">			&lt;h2&gt;网站:&lt;/h2&gt;</span><br><span class="line">			&lt;ol&gt;</span><br><span class="line">				&lt;!-- 赋值规则：值给site，索引给index</span><br><span class="line">				&lt;li v-for=&quot;(site,index) in sites&quot;&gt;</span><br><span class="line">					&#123;&#123; index &#125;&#125; --- &#123;&#123; site.text &#125;&#125;</span><br><span class="line">				&lt;/li&gt; --&gt;</span><br><span class="line">				&lt;template v-for=&quot;(site,index) in sites&quot;&gt;</span><br><span class="line">					&lt;li&gt;&#123;&#123; index &#125;&#125; --- &#123;&#123; site.text &#125;&#125;&lt;/li&gt;</span><br><span class="line">					&lt;li&gt;=============================&lt;/li&gt;</span><br><span class="line">				&lt;/template&gt;</span><br><span class="line">			&lt;/ol&gt;</span><br><span class="line">			</span><br><span class="line">			&lt;ul&gt;</span><br><span class="line">				&lt;li v-for=&quot;(val,key,index) in obj&quot;&gt;</span><br><span class="line">					索引：&#123;&#123; index &#125;&#125; ，属性：&#123;&#123; key &#125;&#125;，值：&#123;&#123; val &#125;&#125;</span><br><span class="line">				&lt;/li&gt;</span><br><span class="line">			&lt;/ul&gt;</span><br><span class="line">			</span><br><span class="line">			&lt;ul&gt;</span><br><span class="line">				&lt;!-- 从1开始遍历 --&gt;</span><br><span class="line">				&lt;li v-for=&quot;n in 10&quot;&gt;&#123;&#123; n &#125;&#125;&lt;/li&gt;</span><br><span class="line">			&lt;/ul&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;script&gt;</span><br><span class="line">			const app = &#123;</span><br><span class="line">			// 初始化数据</span><br><span class="line">				data()&#123;</span><br><span class="line">					return&#123;</span><br><span class="line">						sites: [ // 数组</span><br><span class="line">							&#123;text: &quot;百度&quot;&#125;, //对象</span><br><span class="line">							&#123;text: &quot;字节&quot;&#125;,</span><br><span class="line">							&#123;text: &quot;谷歌&quot;&#125;,</span><br><span class="line">							&#123;text: &quot;360&quot;&#125;,</span><br><span class="line">							&#123;text: &quot;腾讯&quot;&#125;</span><br><span class="line">						],</span><br><span class="line">						obj: &#123; // 对象</span><br><span class="line">							name: &quot;百度&quot;,</span><br><span class="line">							url: &quot;http://www.baidu.com&quot;,</span><br><span class="line">							slogan: &quot;百度一下，你就知道&quot; // 标语 </span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;;</span><br><span class="line">			</span><br><span class="line">			// 挂载</span><br><span class="line">			Vue.createApp(app).mount(&quot;#app&quot;); </span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="./vue3%E6%95%99%E7%A8%8B.assets/image-20230413141744200.png" alt="image-20230413141744200"></p>
<h4 id="4-传参数、v-bind指令"><a href="#4-传参数、v-bind指令" class="headerlink" title="4 传参数、v-bind指令"></a>4 传参数、v-bind指令</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 传参数</span><br><span class="line">	Vue中的标签指令可以传递动态数据作为参数声明。</span><br><span class="line">--&gt;</span><br><span class="line">&lt;!-- v-bind指令，可以简写为冒号</span><br><span class="line">	表示将一个属性的取值动态的和Vue中一个变量绑定，只要变量的值发生改变，对应的绑定元素就会更新。</span><br><span class="line">	v-bind:html的属性名 = &quot;Vue中的变量名&quot;</span><br><span class="line">--&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;!-- 引入最新Vue3脚本 --&gt;</span><br><span class="line">		&lt;script src=&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">		&lt;title&gt;传参数&lt;/title&gt;</span><br><span class="line">	&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">			&lt;a v-bind:href=&quot;url&quot;&gt;点我:实现网页跳转&lt;/a&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		&lt;script&gt;</span><br><span class="line">			const app=&#123;</span><br><span class="line">				data()&#123;</span><br><span class="line">					return&#123;</span><br><span class="line">						url: &quot;http://www.baidu.com&quot;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;;</span><br><span class="line">			Vue.createApp(app).mount(&quot;#app&quot;);</span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="./vue3%E6%95%99%E7%A8%8B.assets/image-20230413103933592.png" alt="image-20230413103933592"></p>
<h4 id="5-用户输入之双向数据绑定、v-model指令"><a href="#5-用户输入之双向数据绑定、v-model指令" class="headerlink" title="5 用户输入之双向数据绑定、v-model指令"></a>5 用户输入之双向数据绑定、v-model指令</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--用户输入 </span><br><span class="line">	1.双向数据绑定</span><br><span class="line">		元素的数据和vue中对象的数据相互影响，取值相同，同步更新。</span><br><span class="line"> --&gt;</span><br><span class="line"> &lt;!-- v-model指令</span><br><span class="line">	用来实现Vue和DOM元素双向数据绑定。</span><br><span class="line">	&#123;</span><br><span class="line">		&lt;span v-model=&quot;Vue中定义的变量&quot;&gt;&lt;/span&gt;</span><br><span class="line">		</span><br><span class="line">		return&#123;</span><br><span class="line">			message: &quot;hello Vue&quot;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">  --&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;用户输入、v-model指令&lt;/title&gt;</span><br><span class="line">		&lt;!-- 引入最新Vue3脚本 --&gt;</span><br><span class="line">		&lt;script src=&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">	&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">			&lt;!-- 渲染数据 --&gt;</span><br><span class="line">			&lt;p&gt;message值: &#123;&#123; message &#125;&#125;&lt;/p&gt;</span><br><span class="line">			&lt;p&gt;</span><br><span class="line">				&lt;input v-model=&quot;message&quot; /&gt;</span><br><span class="line">			&lt;/p&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;script&gt;</span><br><span class="line">			const app = &#123;</span><br><span class="line">			// 初始化数据</span><br><span class="line">				data()&#123;</span><br><span class="line">					return&#123;</span><br><span class="line">						message: &quot;hello Vue&quot;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;;</span><br><span class="line">			</span><br><span class="line">			// 挂载</span><br><span class="line">			Vue.createApp(app).mount(&quot;#app&quot;); </span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="./vue3%E6%95%99%E7%A8%8B.assets/image-20230413105039041.png" alt="image-20230413105039041"></p>
<h2 id="4-Vue3组件"><a href="#4-Vue3组件" class="headerlink" title="4 Vue3组件"></a>4 Vue3组件</h2><h3 id="全局组件"><a href="#全局组件" class="headerlink" title="全局组件"></a>全局组件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--全局组件封装步骤： </span><br><span class="line">	1.创建Vue实例对象</span><br><span class="line">	2.通过app.component()注册全局组件。需要声明组件名称和组件的封装HTML片断(template属性)</span><br><span class="line">	3.将对象挂载到页面指定元素上</span><br><span class="line">	4.通过组件名标签的形式访问组件</span><br><span class="line"> --&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;&lt;/title&gt;</span><br><span class="line">		&lt;!-- 引入最新Vue3脚本 --&gt;</span><br><span class="line">		&lt;script src=&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">	&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">			&lt;!-- 4.通过组件名标签的形式访问组件 --&gt;</span><br><span class="line">			&lt;my-component&gt;&lt;/my-component&gt;</span><br><span class="line">			&lt;my-component&gt;&lt;/my-component&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;script&gt;</span><br><span class="line">			//1.创建实例对象</span><br><span class="line">			const app = Vue.createApp(&#123;</span><br><span class="line">			// 初始化数据</span><br><span class="line">				data()&#123;</span><br><span class="line">					return&#123;</span><br><span class="line">						</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;);</span><br><span class="line">			</span><br><span class="line">			// 2.通过component函数绑定自定义全局组件</span><br><span class="line">			/**</span><br><span class="line">			 * 参数1：表示封装的组件名（注册组件名）</span><br><span class="line">			 * 参数2：使用&#123;&#125;声明封装的这个组件的HTML结构（组件的实现）</span><br><span class="line">			 * template属性:表示指定被封装的HTML的结构</span><br><span class="line">			 */</span><br><span class="line">			app.component(</span><br><span class="line">				&quot;my-component&quot;,</span><br><span class="line">				&#123;</span><br><span class="line">					template: &#x27;&lt;div style=&quot;color:red;&quot;&gt;&lt;h1&gt;自定义组件封装:全局组件&lt;/h1&gt;&lt;/div&gt;&#x27;</span><br><span class="line">				&#125;</span><br><span class="line">			);</span><br><span class="line">			</span><br><span class="line">			//3.挂载</span><br><span class="line">			app.mount(&quot;#app&quot;);</span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="./vue3%E6%95%99%E7%A8%8B.assets/image-20230413151252789.png" alt="image-20230413151252789"></p>
<h3 id="局部组件"><a href="#局部组件" class="headerlink" title="局部组件"></a>局部组件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--局部组件封装步骤： </span><br><span class="line">	1.声明一个外部的js变量，封装组件实现(声明在template属性上)</span><br><span class="line">	2.components属性中用键值对定义组件名和关联的js变量</span><br><span class="line">	3.创建Vue实例并挂载</span><br><span class="line">	4.以组件名标签的形式访问组件</span><br><span class="line"> --&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;&lt;/title&gt;</span><br><span class="line">		&lt;!-- 引入最新Vue3脚本 --&gt;</span><br><span class="line">		&lt;script src=&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">	&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">			&lt;!-- 4.以组件名标签的形式访问组件 --&gt;</span><br><span class="line">			&lt;my-component&gt;&lt;/my-component&gt;</span><br><span class="line">			&lt;my-component2&gt;&lt;/my-component2&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;script&gt;</span><br><span class="line">			// 1.声明一个外部的js变量，封装组件实现(声明在template属性上)</span><br><span class="line">			// tmplate属性：组件实现</span><br><span class="line">			const html_code = &#123;</span><br><span class="line">				template: &#x27;&lt;div style=&quot;color:red;&quot;&gt;&lt;h1&gt;自定义组件:my-component&lt;/h1&gt;&lt;/div&gt;&#x27;</span><br><span class="line">			&#125;;</span><br><span class="line">			const html_code2 = &#123;</span><br><span class="line">				template: &#x27;&lt;div style=&quot;color:red;&quot;&gt;&lt;h1&gt;自定义组件2:my-component2&lt;/h1&gt;&lt;/div&gt;&#x27;</span><br><span class="line">			&#125;;</span><br><span class="line">			</span><br><span class="line">			const app = &#123;</span><br><span class="line">			// 初始化数据</span><br><span class="line">				data()&#123;</span><br><span class="line">					return&#123;</span><br><span class="line">						</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;,</span><br><span class="line">				components: &#123; // 2.components属性中用键值对定义组件名和关联的js变量</span><br><span class="line">					&quot;my-component&quot;: html_code,</span><br><span class="line">					&quot;my-component2&quot;: html_code2</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;;</span><br><span class="line">			</span><br><span class="line">			// 3.创建Vue实例并挂载</span><br><span class="line">			Vue.createApp(app).mount(&quot;#app&quot;); </span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="./vue3%E6%95%99%E7%A8%8B.assets/image-20230413154025386.png" alt="image-20230413154025386"></p>
<h3 id="props属性、组件传值、动态绑定数据"><a href="#props属性、组件传值、动态绑定数据" class="headerlink" title="props属性、组件传值、动态绑定数据"></a>props属性、组件传值、动态绑定数据</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;!--组件传值：props属性</span><br><span class="line">	用来标记父组件中哪一个自定义属性可以向子组件传值,若传值成功，使用&#123;&#123;属性名&#125;&#125;访问该值。</span><br><span class="line">  </span><br><span class="line">  --&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;props属性、组件传值、动态绑定数据&lt;/title&gt;</span><br><span class="line">		&lt;!-- 引入最新Vue3脚本 --&gt;</span><br><span class="line">		&lt;script src=&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">	&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">			&lt;!-- sites数组中每一个对象的id和title用v-bind指令动态绑定数据 --&gt;</span><br><span class="line">			&lt;!-- &lt;site_name v-for=&quot;site in sites&quot; v-bind:id=&quot;site.id&quot; v-bind:title=&quot;site.title&quot; &gt;&lt;/site_name&gt; --&gt;</span><br><span class="line">			&lt;site_name v-for=&quot;site in sites&quot; :id=&quot;site.id&quot; :title=&quot;site.title&quot; &gt;&lt;/site_name&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;script&gt;</span><br><span class="line">			</span><br><span class="line">			const code_html = &#123;</span><br><span class="line">				props: [&quot;id&quot;,&quot;title&quot;], //props数组用来接受哪些自定义属性可以子组件传值。</span><br><span class="line">				template: &#x27;&lt;h1&gt;&#123;&#123; id &#125;&#125;,&#123;&#123;title&#125;&#125;&lt;/h1&gt;&#x27; //读取传过来的值</span><br><span class="line">			&#125;;</span><br><span class="line">			const app = &#123;</span><br><span class="line">			// 初始化数据</span><br><span class="line">				data()&#123;</span><br><span class="line">					return&#123;</span><br><span class="line">						sites: [</span><br><span class="line">							&#123;id: 1,title: &quot;百度&quot;&#125;,</span><br><span class="line">							&#123;id: 2,title: &quot;谷歌&quot;&#125;,</span><br><span class="line">							&#123;id: 3,title: &quot;字节&quot;&#125;</span><br><span class="line">						]</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;,</span><br><span class="line">				//注册局部组件</span><br><span class="line">				components: &#123;</span><br><span class="line">					&quot;site_name&quot;: code_html</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;;</span><br><span class="line">			</span><br><span class="line">			// 挂载</span><br><span class="line">			Vue.createApp(app).mount(&quot;#app&quot;); </span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="./vue3%E6%95%99%E7%A8%8B.assets/image-20230413160041226.png" alt="image-20230413160041226"></p>
<p>自定义组件的属性动态绑定数据</p>
<p><img src="./vue3%E6%95%99%E7%A8%8B.assets/image-20230413162606202.png" alt="image-20230413162606202"></p>
<p><img src="./vue3%E6%95%99%E7%A8%8B.assets/image-20230413165711899.png" alt="image-20230413165711899"></p>
<h2 id="计算属性computed和methods的区别"><a href="#计算属性computed和methods的区别" class="headerlink" title="计算属性computed和methods的区别"></a>计算属性computed和methods的区别</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--计算属性 </span><br><span class="line">	computed用来将一些复杂的业务逻辑放在计算属性中封装，外部调用访问。</span><br><span class="line">	&#123;</span><br><span class="line">		computed: &#123;</span><br><span class="line">			// 定义方法完成复杂业务逻辑</span><br><span class="line">			方法名称(参数列表)&#123;&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"> --&gt;</span><br><span class="line"> </span><br><span class="line"> &lt;!-- 计算属性computed与methods的区别</span><br><span class="line">	当一个核心算法会被很多地方调用的业务逻辑要封装到computed，这样提高运行效率</span><br><span class="line">	调用方式不同：使用方法名调用computed，使用方法()调用method</span><br><span class="line">	computed基于缓存，只有当依赖的数据发生改变时才会重新去获取数据。</span><br><span class="line">	methods只要函数被调用，都会重新去加载和渲染数据。</span><br><span class="line">  --&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;计算属性computed与methods的区别&lt;/title&gt;</span><br><span class="line">		&lt;!-- 引入最新Vue3脚本 --&gt;</span><br><span class="line">		&lt;script src=&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">	&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">			&lt;p&gt;传统方式获取字符串反转:&#123;&#123; message.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">			&lt;p&gt;调用计算属性computed获取字符串反转：&#123;&#123; reverseStr &#125;&#125;&lt;/p&gt;</span><br><span class="line">			&lt;p&gt;调用methods获取字符串反转：&#123;&#123; reverseStr2() &#125;&#125;&lt;/p&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;script&gt;</span><br><span class="line">			const app = &#123;</span><br><span class="line">			// 初始化数据</span><br><span class="line">				data()&#123;</span><br><span class="line">					return&#123;</span><br><span class="line">						message: &quot;luotao&quot;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;,</span><br><span class="line">				computed: &#123; //计算属性</span><br><span class="line">					// 定义方法完成复杂业务逻辑</span><br><span class="line">					reverseStr()&#123;</span><br><span class="line">						return this.message.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;)</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;,</span><br><span class="line">				methods: &#123; //自定义方法</span><br><span class="line">					// 定义方法完成复杂业务逻辑</span><br><span class="line">					reverseStr2()&#123;</span><br><span class="line">						return this.message.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;)</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;;</span><br><span class="line">			</span><br><span class="line">			// 挂载</span><br><span class="line">			Vue.createApp(app).mount(&quot;#app&quot;); </span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="./vue3%E6%95%99%E7%A8%8B.assets/image-20230413174350030.png" alt="image-20230413174350030"></p>
]]></content>
  </entry>
</search>
